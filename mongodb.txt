#备份数据
/root/sunxu/mongo/bin/mongodump -h 10.24.0.15 --port 27017 -u mongouser -p fca@2018 --authenticationDatabase=admin --authenticationMechanism=SCRAM-SHA-1 -d iov-notification-record  -o ./

#导入数据
/root/mongo/bin/mongorestore -h 10.129.0.12 --port 27017 -u mongouser -p fca@2018 --authenticationDatabase=admin --authenticationMechanism=SCRAM-SHA-1 -d alfa_database_mno  --dir ./alfa_database_mno

#导出数据
/root/mongodb-linux-x86_64-rhel70-3.4.17/bin/./mongoexport -h 10.1.0.8 -u mongouser -pfca@2018 --authenticationDatabase=admin --authenticationMechanism=SCRAM-SHA-1 --port 27017 -d database_phev -c t_phev_command --type=csv -f vin,platformResponseId,status,requestTime,responseBody -q '{"status":"ONGOING",requestTime:{$gt:1591401600000,$lt:1592438400000}}' -o /root/phev06-18.csv

admin -u admin -p 123456



db.resume.aggregate([
	{$group : {_id : "$resumeId", num : {$sum : 1}}},
	{$match : { num : { $gt : 1} } },

])

db.resumeId.aggregate([
	
	{$skip :  1400000},
	{$limit : 100000},
	{$group : {_id : "$resumeId", num : {$sum : 1}}},
	{$match : { num :  {$gt  : 1}}},
	{$group : {_id : null, num : {$sum : 1}}},
])


===========

db.resumeId.aggregate([
//	{$sort : {id:1}},
	{$skip :  000000},
	{$limit : 500000},
//	{$match : { resumeId :  {$eq  : "41452326"}}},
	{$group : {_id : "$resumeId", num : {$sum : 1},dups: {$addToSet: '$_id'}}},
	{$match : { num :  {$gt  : 1}}},
//	{$group : {_id : null, num : {$sum : 1}}},
])
//.forEach(function(doc){
//    doc.dups.shift();
//    db.resumeId.remove({_id: {$in: doc.dups}});
//})

========

## 获取重复数据，排除第一个，把剩下的插入到集合中 resumeId_replace

db.resumeId.aggregate([
	
//	{$sort : {id:1}},
//	{$skip :  500000},
//	{$limit : 500000},
//	{$match : { resumeId :  {$eq  : "118388686"}}},
	{$group : {_id : "$resumeId", num : {$sum : 1},dups: {$addToSet: '$_id'}}},
	{$match : { num :  {$gt  : 1}}},
//	{$group : {_id : null, num : {$sum : 1}}},
],{allowDiskUse : true })
.forEach(function(doc){
  	doc.dups.shift();
  	
  	for(var i=0;i<doc.dups.length;i++){
  	  db.resumeId_replace.insert( {"de_id" : doc.dups[i]});
  	}
    
})
==============


db.resumeId_replace.find({})
.forEach(function(doc){
  	db.resumeId.remove({_id: doc.de_id});
})


========================
创建索引
db.collection.createIndex(keys, options)
db.col.createIndex({"title":1,"description":-1})
db.values.createIndex({open: 1, close: 1}, {background: true})

db.hana_employee.createIndex({pernr: 1}, {background: true})

查询索引
db.col.getIndexes()









